const { Booking, Room, User } = require('../models');
const bcrypt = require('bcryptjs');

// GET /api/user/history
const getUserHistory = async (req, res) => {
  try {
    const history = await Booking.findAll({
      where: { userId: req.user.id },
      include: [{ model: Room }],
      order: [['startDate', 'DESC']]
    });

    res.json({ history });
  } catch (err) {
    res.status(500).json({ message: 'Server error', error: err.message });
  }
};

// PUT /api/user/settings
const updateUserSettings = async (req, res) => {
  try {
    const { name, email, password } = req.body;

    const user = await User.findByPk(req.user.id);
    if (!user) return res.status(404).json({ message: 'User not found' });

    if (name) user.name = name;
    if (email) user.email = email;
    if (password) {
      user.password = await bcrypt.hash(password, 10);
    }

    await user.save();
    res.json({ message: 'Profile updated', user: { id: user.id, name: user.name, email: user.email } });
  } catch (err) {
    res.status(500).json({ message: 'Server error', error: err.message });
  }
};

module.exports = { getUserHistory, updateUserSettings };
